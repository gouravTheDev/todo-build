{"version":3,"sources":["backend.js","auth/helper/index.js","core/Menu.js","core/Base.js","core/Home.js","user/Signup.js","user/Signin.js","auth/helper/PrivateRoutes.js","core/helper/projectHelper.js","user/UserTodos.js","Routes.js","index.js"],"names":["API","process","cookies","Cookies","isAutheticated","token","get","currentTab","history","path","location","pathname","color","withRouter","className","style","to","onClick","next","remove","fetch","method","then","response","console","log","catch","err","signout","push","Base","title","description","children","Home","useState","Signup","name","email","phone","password","error","success","values","setValues","handleChange","event","target","value","onSubmit","user","preventDefault","headers","Accept","body","JSON","stringify","json","data","display","onChange","type","Signin","loading","didRedirect","a","signin","status","message","window","set","authenticate","placeholder","PrivateRoute","Component","component","rest","render","props","state","from","createProject","projectName","category","projectSaved","createTask","task","projectId","taskSaved","updateTask","taskId","taskBody","todoId","taskUpdated","updateProject","projectBody","categoryId","fetchProjects","projects","fetchTasks","tasks","UserTodos","show","setShow","showProjectDetails","setShowProjectDetails","showDetailsForm","setShowDetailsForm","showEditButton","setShowEditButton","setTask","details","setDetails","setToken","project","setProject","projectDetails","setProjectDetails","setProjects","setTasks","handleShowProjectDetails","proj","map","_id","toString","ProjectHelper","useEffect","existingProjects","submitProject","onTaskSubmit","existingTasks","submitTask","udpateTask","deleteTask","isDeleted","deleteProject","confirm","onUpdateProject","checkBox","obj","checked","updateObj","done","defaultChecked","Button","variant","id","borderRadius","key","cursor","position","bottom","left","doneTaskCount","allTaskCount","right","moment","createdAt","format","Modal","size","aria-labelledby","centered","onHide","Header","closeButton","Title","height","width","Body","fontSize","rows","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.896884ed.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_BACKEND;\n","import { API } from \"../../backend\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const signup = (user) => {\n  return fetch(`${API}/user/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const signin = (user) => {\n  return fetch(`${API}/user/login`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then(async (response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    cookies.set(\"token\", data.token, { path: \"/\" });\n    next();\n  }\n};\n\nexport const signout = (next) => {\n  let token = cookies.get(\"token\");\n  if (token && token != \"\") {\n    cookies.remove(\"token\", { path: \"/\" });\n    next();\n\n    return fetch(`${API}/user/logout`, {\n      method: \"GET\",\n    })\n      .then((response) => console.log(\"signout success\"))\n      .catch((err) => console.log(err));\n  }\n};\n\nexport const isAutheticated = () => {\n  let token = cookies.get(\"token\");\n  if (!token) {\n    return false;\n  } else {\n    return token;\n  }\n};\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAutheticated } from \"../auth/helper\";\n\nconst currentTab = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: \"#2ecc72\" };\n  } else {\n    return { color: \"#FFFFFF\" };\n  }\n};\n\nconst Menu = ({ history }) => (\n  <div>\n    <ul className=\"nav nav-tabs bg-dark\">\n      <li className=\"nav-item\">\n        <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\n          Home\n        </Link>\n      </li>\n      {isAutheticated() && isAutheticated() && (\n        <li className=\"nav-item\">\n          <Link\n            style={currentTab(history, \"/user/todos\")}\n            className=\"nav-link\"\n            to=\"/user/todo\"\n          >\n            Todos\n          </Link>\n        </li>\n      )}\n      {!isAutheticated() && (\n        <Fragment>\n          <li className=\"nav-item\">\n            <Link\n              style={currentTab(history, \"/signup\")}\n              className=\"nav-link\"\n              to=\"/signup\"\n            >\n              Signup\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              style={currentTab(history, \"/signin\")}\n              className=\"nav-link\"\n              to=\"/signin\"\n            >\n              Sign In\n            </Link>\n          </li>\n        </Fragment>\n      )}\n      {isAutheticated() && (\n        <li className=\"nav-item\">\n          <span\n            className=\"nav-link text-warning\"\n            onClick={() => {\n              signout(() => {\n                history.push(\"/\");\n              });\n            }}\n          >\n            Signout\n          </span>\n        </li>\n      )}\n    </ul>\n  </div>\n);\n\nexport default withRouter(Menu);\n","import React from \"react\";\nimport Menu from \"./Menu\";\n\nconst Base = ({\n  title = \"My Title\",\n  description = \"My desription\",\n  className = \"pt-4\",\n  children,\n}) => (\n  <div>\n    <Menu />\n    <div className=\"container\">\n      <h1 className=\"text-center\">{title}</h1>\n      <div className={className}>{children}</div>\n    </div>\n    <footer className=\"footer mt-auto\">\n      {/* <div className=\"container-fluid bg-success text-center py-3\">\n        <h4>If you got any questions, feel free to reach out!</h4>\n        <button className=\"btn btn-warning btn-lg\">Contact Us</button>\n      </div>\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          An Amazing <span className=\">MERN</span> Bootcamp\n        </span>\n      </div> */}\n    </footer>\n  </div>\n);\n\nexport default Base;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\n\nexport default function Home() {\n  const [error, setError] = useState(false);\n\n  return (\n    <Base title=\"Home Page\" description=\"Welcome to the Tshirt Store\">\n      <div className=\"row text-center\">\n        <h1 className=\"text-white\">All of tshirts</h1>\n        <div className=\"row\">\n        </div>\n      </div>\n    </Base>\n  );\n}\n","import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../auth/helper\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    error: \"\",\n    success: false\n  });\n\n  const { name, email, phone, password, error, success } = values;\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    signup({ name, email, phone, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, success: false });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            password: \"\",\n            error: \"\",\n            success: true\n          });\n        }\n      })\n      .catch(console.log(\"Error in signup\"));\n  };\n\n  const signUpForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Name</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"name\")}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"email\")}\n                type=\"email\"\n                value={email}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Phone</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"phone\")}\n                type=\"number\"\n                value={phone}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                className=\"form-control\"\n                type=\"password\"\n                value={password}\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const successMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please\n            <Link to=\"/signin\">Login Here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign up page\" description=\"A page for user to sign up!\">\n      {successMessage()}\n      {errorMessage()}\n      {signUpForm()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    phone: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { phone, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ phone, password })\n      .then(data => {\n        if (data.status == 201) {\n          setValues({ ...values, error: data.message, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      return <Redirect to=\"/user/todo\" />;\n    }\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Phone</label>\n              <input\n                onChange={handleChange(\"phone\")}\n                value={phone}\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Enter Phone Number\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAutheticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAutheticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { API } from \"../../backend\";\n\nclass ProjectHelper {\n  createProject = async (token, projectName) => {\n    try {\n      let projectSaved = await fetch(`${API}/category/store`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({ category: projectName }),\n      });\n      projectSaved = await projectSaved.json();\n      return projectSaved;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  createTask = async (token, task, projectId) => {\n    try {\n      let taskSaved = await fetch(`${API}/todo/store`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({ title: task, category: projectId }),\n      });\n      taskSaved = await taskSaved.json();\n      return taskSaved;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateTask = async (token, taskId, taskBody) => {\n    try {\n      taskBody.todoId = taskId;\n      let taskUpdated = await fetch(`${API}/todo/update`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify(taskBody),\n      });\n      taskUpdated = await taskUpdated.json();\n      return taskUpdated;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateProject = async (token, projectId, projectBody) => {\n    try {\n      projectBody.categoryId = projectId;\n      let taskUpdated = await fetch(`${API}/category/update`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify(projectBody),\n      });\n      taskUpdated = await taskUpdated.json();\n      return taskUpdated;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  fetchProjects = async (token) => {\n    try {\n      let projects = await fetch(`${API}/category/list`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n      });\n      projects = await projects.json();\n      return projects;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  fetchTasks = async (token, projectId) => {\n    try {\n      let tasks = await fetch(`${API}/todo/list/${projectId}`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n      });\n      tasks = await tasks.json();\n      return tasks;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport default new ProjectHelper();\n","import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport ProjectHelper from \"../core/helper/projectHelper\";\n\nimport moment from \"moment\";\n\nconst cookies = new Cookies();\n\nconst UserTodos = () => {\n  // State Variables\n  const [show, setShow] = useState(false);\n  const [showProjectDetails, setShowProjectDetails] = useState(false);\n  const [showDetailsForm, setShowDetailsForm] = useState(false);\n  const [showEditButton, setShowEditButton] = useState(false);\n\n  const [task, setTask] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [project, setProject] = useState(\"\");\n  const [projectDetails, setProjectDetails] = useState({});\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n\n  // Handling Changes\n\n  const handleClose = () => setShow(false);\n  const handleClose2 = () => setShowProjectDetails(false);\n  const handleShow = () => setShow(true);\n  const handleShowProjectDetails = async (projectId) => {\n    setTasks([]);\n    setProjectDetails({});\n    setDetails(\"\");\n    let proj = {};\n    projects.map((project) => {\n      if (project._id.toString() == projectId.toString()) {\n        setProjectDetails(project);\n        proj = project;\n      }\n    });\n    console.log(projectId);\n    let token = cookies.get(\"token\");\n    let tasks = await ProjectHelper.fetchTasks(token, projectId);\n    if (tasks.status == 200) {\n      setTasks(tasks.data);\n    }\n    if (proj.details == \"\" || !proj.details) {\n      setShowDetailsForm(true);\n      setShowEditButton(false);\n    } else {\n      setDetails(proj.details);\n      setShowDetailsForm(false);\n      setShowEditButton(true);\n    }\n    setShowProjectDetails(true);\n  };\n\n  const handleTask = (name) => (event) => {\n    setTask(event.target.value);\n  };\n\n  const handleProject = (name) => (event) => {\n    setProject(event.target.value);\n  };\n\n  const handleDetails = (name) => (event) => {\n    setDetails(event.target.value);\n  };\n\n  async function fetchProjects() {\n    let token = cookies.get(\"token\");\n    setToken(token);\n    let response = await ProjectHelper.fetchProjects(token);\n    console.log(response.data);\n    setProjects(response.data);\n  }\n\n  // Use Effect Method\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Execution Methods\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let existingProjects = projects;\n    if (project == \"\") {\n      return;\n    }\n    let submitProject = await ProjectHelper.createProject(token, project);\n    if (submitProject.status == 200) {\n      existingProjects.push(submitProject.data);\n    } else {\n      return;\n    }\n    setProjects(existingProjects);\n    setProject(\"\");\n    fetchProjects();\n  };\n\n  const onTaskSubmit = async (event) => {\n    event.preventDefault();\n    let existingTasks = tasks;\n    let updatedTasks = [];\n    if (task == \"\") {\n      return;\n    }\n    let submitTask = await ProjectHelper.createTask(\n      token,\n      task,\n      projectDetails._id\n    );\n    console.log(submitTask);\n    if (submitTask.status == 200) {\n      existingTasks.push(submitTask.data);\n    } else {\n      return;\n    }\n    setTasks(existingTasks);\n    setTask(\"\");\n    fetchProjects();\n  };\n\n  const udpateTask = async (taskId, body) => {\n    let existingTasks = tasks;\n    let updateTask = await ProjectHelper.updateTask(token, taskId, body);\n    console.log(updateTask);\n    if (updateTask.status == 200) {\n      setTasks(updateTask.data);\n    } else {\n      return;\n    }\n    fetchProjects();\n  };\n\n  const deleteTask = async (taskId) => {\n    let existingTasks = tasks;\n    let updateTask = await ProjectHelper.updateTask(token, taskId, {\n      isDeleted: true,\n    });\n    if (updateTask.status == 200) {\n      setTasks(updateTask.data);\n    } else {\n      return;\n    }\n    fetchProjects();\n  };\n\n  const deleteProject = async (projectId) => {\n    if (window.confirm(\"Delete the Project?\")) {\n      setShowProjectDetails(false);\n      let updateProject = await ProjectHelper.updateProject(token, projectId, {\n        isDeleted: true,\n      });\n      // console.log(updateProject)\n      if (updateProject.status == 200) {\n        setProjects(updateProject.data);\n      } else {\n        return;\n      }\n      fetchProjects();\n    }\n  };\n\n  const onUpdateProject = async (event) => {\n    event.preventDefault();\n    if (details == \"\") {\n      return;\n    }\n    let updateProject = await ProjectHelper.updateProject(\n      token,\n      projectDetails._id,\n      { details: details }\n    );\n    console.log(updateProject);\n    if (updateProject.status == 200) {\n      setProjectDetails(updateProject.data);\n    } else {\n      return;\n    }\n    setDetails(\"\");\n    fetchProjects();\n  };\n\n  // Render Functions\n\n  const checkBox = (taskId, obj) => {\n    let checked = obj.checked;\n    let updateObj = {};\n    if (checked) {\n      updateObj.done = false;\n    } else {\n      updateObj.done = true;\n    }\n    return (\n      <div className=\"form-group form-check\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input custom-check\"\n          defaultChecked={checked}\n          onChange={() => udpateTask(taskId, updateObj)}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Listed Projects\">\n      <div className=\"text-center\">\n        <Button\n          variant=\"primary\"\n          onClick={handleShow}\n          id=\"addProjectButton\"\n          className=\"shadow\"\n          style={{ borderRadius: \"50%\" }}\n          title=\"Add New Project\"\n        >\n          <i className=\"fa fa-plus\" id=\"plusIcon\"></i>\n        </Button>\n      </div>\n      <div className=\"row\">\n        {projects.map((project) => (\n          <div key={project._id} className=\"col-md-3 col-sm-12 mb-3\">\n            <div\n              className=\"card-cus shadow\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => handleShowProjectDetails(project._id)}\n            >\n              <div className=\"card-body\">\n                <h4\n                  style={{ color: \"#000\" }}\n                  className=\"text-center font-weight-bold\"\n                >\n                  {project.category}\n                </h4>\n                <div className=\"row mt-3\">\n                  <div className=\"col-4\">\n                    <div\n                      className=\"pt-3\"\n                      style={{ position: \"\", bottom: \"2px\", left: \"30px\" }}\n                    >\n                      <span style={{ color: \"#9E9EA1\" }}>\n                        <i className=\"far fa-check-square\"></i>{\" \"}\n                        {project.doneTaskCount}/{project.allTaskCount}\n                      </span>\n                    </div>\n                  </div>\n                  <div\n                    className=\"col-8 text-right\"\n                    style={{\n                      position: \"\",\n                      bottom: \"2px\",\n                      right: \"5px\",\n                    }}\n                  >\n                    <div\n                      className=\"pt-3\"\n                      style={{ position: \"\", bottom: \"2px\", right: \"30px\" }}\n                    >\n                      <span style={{ color: \"#9E9EA1\" }}>\n                        <i className=\"far fa-clock\"></i>{\" \"}\n                        {moment(project.createdAt).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Project Details Modal Starts */}\n\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={showProjectDetails}\n        onHide={handleClose2}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n            {projectDetails.category}{\" \"}\n            <button\n              className=\"btn btn-sm btn-danger ml-4\"\n              style={{\n                height: \"35px\",\n                width: \"35px\",\n                borderRadius: \"50%\",\n              }}\n              title=\"Delete\"\n              type=\"button\"\n              onClick={() => deleteProject(projectDetails._id)}\n            >\n              <i className=\"fas fa-trash\"></i>\n            </button>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container row px-4 py-4\">\n            <div className=\"col-12 text-left\">\n              <h5 className=\"mb-3 font-weight-bold\">\n                <i className=\"fas fa-check-square\"></i> Project Details\n              </h5>{\" \"}\n              <hr />\n              <p style={{ fontSize: \"1.2em\" }}>{projectDetails.details}</p>\n              <div className={showEditButton ? \"\" : \"hidden\"}>\n                <button\n                  className=\"btn btn-sm btn-warning\"\n                  onClick={() => {\n                    setShowDetailsForm(true);\n                    setShowEditButton(false);\n                  }}\n                  style={{ height: \"32px\", width: \"32px\", borderRadius: \"50%\" }}\n                >\n                  <i className=\"fas fa-edit\"></i>\n                </button>\n              </div>\n              <form className={showDetailsForm ? \"\" : \"hidden\"}>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control\"\n                    value={details}\n                    onChange={handleDetails(\"details\")}\n                    placeholder=\"Update Project Details\"\n                    rows=\"3\"\n                  ></textarea>\n                </div>\n                <div className=\"form-group text-right\">\n                  <button\n                    className=\"btn btn-success shadow\"\n                    onClick={onUpdateProject}\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"container row px-4 py-4\">\n            <div className=\"col-12 text-left\">\n              <h5 className=\"mb-3 font-weight-bold\">\n                <i className=\"fas fa-tasks\"></i> Task List\n              </h5>\n              <hr />\n            </div>\n            <div className=\"col-12\">\n              {tasks.map((task) => (\n                <div className=\"row mb-3\" key={task._id}>\n                  <div className=\"col-1 text-right\">\n                    {task.done\n                      ? checkBox(task._id, { checked: true })\n                      : checkBox(task._id, { checked: false })}\n                  </div>\n                  <div className=\"col-8 text-left\">\n                    <span className={task.done ? \"text-strike\" : \"\"}>\n                      {task.title}\n                    </span>\n                  </div>\n                  <div className=\"col-2 text-right\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-danger\"\n                      onClick={() => deleteTask(task._id)}\n                    >\n                      <i className=\"fa fa-trash\"></i>\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <form>\n            <div className=\"container row pb-4\">\n              <div className=\"col-md-10 col-sm-12 mx-auto mb-3\">\n                <input\n                  onChange={handleTask(\"project\")}\n                  value={task}\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Enter Task Name\"\n                />\n              </div>\n              <div className=\"col-md-2 col-sm-12 mx-auto text-right\">\n                <button\n                  onClick={onTaskSubmit}\n                  className=\"btn btn-success shadow\"\n                >\n                  Add Task\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n      {/* Project Details Modal Starts */}\n\n      {/* Create New Project Modal Starts */}\n      <Modal\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create New Project</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n            <div className=\"row\">\n              <div className=\"col-md-12 col-sm-12 mx-auto mb-3\">\n                <input\n                  onChange={handleProject(\"project\")}\n                  value={project}\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Enter Project Name\"\n                />\n              </div>\n              <div className=\"col-md-12 col-sm-12 mx-auto text-right\">\n                <button onClick={onSubmit} className=\"btn btn-success\">\n                  Submit\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n      {/* Create New Project Modal Ends */}\n    </Base>\n  );\n};\n\nexport default UserTodos;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./core/Home\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport PrivateRoute from \"./auth/helper/PrivateRoutes\";\nimport UserTodos from \"./user/UserTodos\";\n// import AddCategory from \"./admin/AddCategory\";\n// import ManageCategories from \"./admin/ManageCategories\";\n// import UpdateProduct from \"./admin/UpdateProduct\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/signup\" exact component={Signup} />\n        <Route path=\"/signin\" exact component={Signin} />\n        <PrivateRoute path=\"/user/todo\" exact component={UserTodos} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./Routes\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}